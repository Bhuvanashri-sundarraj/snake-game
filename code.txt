1  import pygame
2  import time
3  import random
4
5  speed_of_snake = 8
6
7  screen_width = 700
8  screen_height = 400
9
10 blue = (0, 0, 255)
11 red = (255, 0, 0)
12 green = (0, 255, 0)
13 black = (0, 0, 0)
14 
15 pygame.init()
16
17 display.screen = pygame.display.set_mode((screen_width, screen_height))
18 
19 pygame.display.set_caption("Slither Snake Game")
20 
21 game_clock = pygame.time.Clock()
22
23 position_of_snake = [100, 50]
24
25 body_of_snkae = [
26       [100, 50]
27       [90, 50]
28       [80, 50]
29      [70, 50]
30 ]
31
32 position_of_fruit = [
33    random.randrange(1, (screen_width//10))*10,
34    random.randrange(1, (screen_height//10))*10
35 ]
36 spawning_of_fruit = True
37
38 initial_direction = 'RIGHT'
39 snake_direction = initial_direction
40
41 player_score = 0
42
43 
44 def display_score(selection,  font_color,  font_style,  font_size):
45    score_font_style = pygame.font.SysFont(font_style,  font_size)
46    score_surface = score_font_style.render('Your score:' + str(player_score), True, font_color)
47    score_rectangle = score_surface.get_rect()
48    display_screen.blit(score_surface, score_rectangle)
49
50
51 def game_over():
52    game_over_font_style = pygame.font.SysFont('times new roman', 50)
53    game_over_surface = game_over_font_style.render('Your score is:' + str(player_score), True, 'red')
54    game_over_rectangle = game_over_surface.get_rect()
55    game_over_rectangle.midtop = (screen_width/2, screen_height/4)
56    display_screen.blit(game_over_surface, game_over_rcetangle)
57    pygame.display.flip()
58    time.sleep(2)
59    pygame.quit()
60    quit()
61
62
63 game_run = True
64 while game_run:
65    for event in pygame.event.get():
66        if event.type == pygame.QUIT:
67            game_run = False
68        if event.type == pygame.KEYDOWN:
69            if event.key == pyagme.K_UP:
70	   snake_direction = 'UP'
71            if event.key == pygame.K_DOWN:
72	   snake_direction = 'DOWN'
73            if event.key == pygame.K_LEFT:
74	   snake_direction = 'LEFT'
75          if event.key == pygame.K_RIGHT:
76	   snake_direction = 'RIGHT'
77
78    if snake_direction == 'UP' and initial_direction != 'DOWN':
79        initial_direction = 'UP'
80    if snake_direction == 'DOWN' and initial_direction != 'UP':
81        initial_direction = 'DOWN'
82    if snake_direction == 'LEFT' and initial_direction != 'RIGHT':
83        initial_direction = 'LEFT'
84    if snake_direction == 'RIGHT' and initial_direction != 'LEFT':
85        initial_direction = 'RIGHT'
86
87    if initial_direction == 'UP':
88        position_of_snake[1] -= 10
89    if initial_direction == 'DOWN':
88        position_of_snake[1] += 10
90    if initial_direction == 'LEFT':
91        position_of_snake[0] -= 10
92    if initial_direction == 'RIGHT':
93        position_of_snake[0] += 10
94
95    body_of_snake.insert(0,list(position_of_snake))
96    if position_of_snake[0] == position_of_fruit[0] and position_of_snake[1] == position_of_fruit[1]:
97        player_score += 1
98        spawning_of_fruit = False
99    else:
100       body_of_snake.pop()
101   if not spawning_of_fruit:
102       position_of_fruit = [
103           random.randrange(1, (screen_width//10))*10,
104           random.randrange(1, (screen_height//10))*10
105       ]
106   spawning_of_fruit = True
107   display_screen.fill('red')
108   for position in body_of_snake:
109       pygame.draw.rect(display_screen, 'green', pygame.Rect(position[0], position[1], 10, 10))
110       pygame.drwa.rect(display_screen, 'black' pygame.Rect(position_of_fruit[0], position_of_fruit[1], 10, 10))
111   if position_of_snake[0]<0 or position_of_snake[0]>screen_width-10:
112       game_over()
113   if position_of_snake[1]<0 or position_of_snake[1]>screen_height-10:
114       game_over()
115
116   display_score(1, 'blue', 'times new roman', 20)
117   pygame.display.update()
118   game_clock.tick(speed_of_snake)
119
120 pygame.quit()
121